//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Tenrox.Shared.Utilities;

namespace Tracman.Tenrox.Integration.TimesheetsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Timesheets", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Timesheets : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.CompletedTimesheet[] MyCompletedTimesheetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.Timesheet[] MyTimesheetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCompletedTimesheetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNextTimesheetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPreviousTimesheetsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.CompletedTimesheet[] MyCompletedTimesheets {
            get {
                return this.MyCompletedTimesheetsField;
            }
            set {
                if ((object.ReferenceEquals(this.MyCompletedTimesheetsField, value) != true)) {
                    this.MyCompletedTimesheetsField = value;
                    this.RaisePropertyChanged("MyCompletedTimesheets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.Timesheet[] MyTimesheets {
            get {
                return this.MyTimesheetsField;
            }
            set {
                if ((object.ReferenceEquals(this.MyTimesheetsField, value) != true)) {
                    this.MyTimesheetsField = value;
                    this.RaisePropertyChanged("MyTimesheets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCompletedTimesheets {
            get {
                return this.TotalCompletedTimesheetsField;
            }
            set {
                if ((this.TotalCompletedTimesheetsField.Equals(value) != true)) {
                    this.TotalCompletedTimesheetsField = value;
                    this.RaisePropertyChanged("TotalCompletedTimesheets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNextTimesheets {
            get {
                return this.TotalNextTimesheetsField;
            }
            set {
                if ((this.TotalNextTimesheetsField.Equals(value) != true)) {
                    this.TotalNextTimesheetsField = value;
                    this.RaisePropertyChanged("TotalNextTimesheets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPreviousTimesheets {
            get {
                return this.TotalPreviousTimesheetsField;
            }
            set {
                if ((this.TotalPreviousTimesheetsField.Equals(value) != true)) {
                    this.TotalPreviousTimesheetsField = value;
                    this.RaisePropertyChanged("TotalPreviousTimesheets");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompletedTimesheet", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CompletedTimesheet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DoubleOverTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        private bool HasNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LeaveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OverTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RegTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.TimesheetTransition[] TimesheetTransitionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimesheetUIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserUIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WORKFUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowInstanceGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DoubleOverTime {
            get {
                return this.DoubleOverTimeField;
            }
            set {
                if ((this.DoubleOverTimeField.Equals(value) != true)) {
                    this.DoubleOverTimeField = value;
                    this.RaisePropertyChanged("DoubleOverTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool HasNotes {
            get {
                return this.HasNotesField;
            }
            set {
                if ((this.HasNotesField.Equals(value) != true)) {
                    this.HasNotesField = value;
                    this.RaisePropertyChanged("HasNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LeaveTime {
            get {
                return this.LeaveTimeField;
            }
            set {
                if ((this.LeaveTimeField.Equals(value) != true)) {
                    this.LeaveTimeField = value;
                    this.RaisePropertyChanged("LeaveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OverTime {
            get {
                return this.OverTimeField;
            }
            set {
                if ((this.OverTimeField.Equals(value) != true)) {
                    this.OverTimeField = value;
                    this.RaisePropertyChanged("OverTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RegTime {
            get {
                return this.RegTimeField;
            }
            set {
                if ((this.RegTimeField.Equals(value) != true)) {
                    this.RegTimeField = value;
                    this.RaisePropertyChanged("RegTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.TimesheetTransition[] TimesheetTransitions {
            get {
                return this.TimesheetTransitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TimesheetTransitionsField, value) != true)) {
                    this.TimesheetTransitionsField = value;
                    this.RaisePropertyChanged("TimesheetTransitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimesheetUId {
            get {
                return this.TimesheetUIdField;
            }
            set {
                if ((this.TimesheetUIdField.Equals(value) != true)) {
                    this.TimesheetUIdField = value;
                    this.RaisePropertyChanged("TimesheetUId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalTime {
            get {
                return this.TotalTimeField;
            }
            set {
                if ((this.TotalTimeField.Equals(value) != true)) {
                    this.TotalTimeField = value;
                    this.RaisePropertyChanged("TotalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserUId {
            get {
                return this.UserUIdField;
            }
            set {
                if ((this.UserUIdField.Equals(value) != true)) {
                    this.UserUIdField = value;
                    this.RaisePropertyChanged("UserUId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WORKFUID {
            get {
                return this.WORKFUIDField;
            }
            set {
                if ((this.WORKFUIDField.Equals(value) != true)) {
                    this.WORKFUIDField = value;
                    this.RaisePropertyChanged("WORKFUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowActivityName {
            get {
                return this.WorkflowActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowActivityNameField, value) != true)) {
                    this.WorkflowActivityNameField = value;
                    this.RaisePropertyChanged("WorkflowActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowInstanceGuid {
            get {
                return this.WorkflowInstanceGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowInstanceGuidField, value) != true)) {
                    this.WorkflowInstanceGuidField = value;
                    this.RaisePropertyChanged("WorkflowInstanceGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Timesheet", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Timesheet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveSiteUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllowEntryInTheAdvanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllowEntryInTheAdvanceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllowEntryInThePastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllowEntryInThePastTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BankedOverTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanManagerModifyBillableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanManagerModifyPayableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultClientUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultProjectUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultWorkTypeUidField;
        
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FunctionalGroupUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FunctionalManagerUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAssignmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorsField;
        
        private bool HasNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasTimeentriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTimesheetClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.TaskLeaveTime[] LeaveTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.TimesheetLockedDates[] LockedDatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterSiteUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PeriodClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonalDayTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResourceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleObjectTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowAdjustmentsSectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowAssignmentsSectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowLeaveTimeSectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowNonWorkingTimeSectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SickLeaveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeIncrementField;
        
        private Tracman.Tenrox.Integration.TimesheetsService.AssignmentAttribute[] TimesheetAssignmentAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimesheetColumnsField;
        
        private Tracman.Tenrox.Integration.TimesheetsService.TimesheetEntry[] TimesheetEntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.TimesheetError[] TimesheetErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.TimesheetNote[] TimesheetNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.TimesheetState[] TimesheetStatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.TimesheetTransition[] TimesheetTransitionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPeriodOverTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPeriodPayableTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPeriodRegTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserAccessStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsersAccessStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VacationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowGUIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActiveSiteUid {
            get {
                return this.ActiveSiteUidField;
            }
            set {
                if ((this.ActiveSiteUidField.Equals(value) != true)) {
                    this.ActiveSiteUidField = value;
                    this.RaisePropertyChanged("ActiveSiteUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityGUID {
            get {
                return this.ActivityGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityGUIDField, value) != true)) {
                    this.ActivityGUIDField = value;
                    this.RaisePropertyChanged("ActivityGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllowEntryInTheAdvance {
            get {
                return this.AllowEntryInTheAdvanceField;
            }
            set {
                if ((this.AllowEntryInTheAdvanceField.Equals(value) != true)) {
                    this.AllowEntryInTheAdvanceField = value;
                    this.RaisePropertyChanged("AllowEntryInTheAdvance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllowEntryInTheAdvanceType {
            get {
                return this.AllowEntryInTheAdvanceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AllowEntryInTheAdvanceTypeField, value) != true)) {
                    this.AllowEntryInTheAdvanceTypeField = value;
                    this.RaisePropertyChanged("AllowEntryInTheAdvanceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllowEntryInThePast {
            get {
                return this.AllowEntryInThePastField;
            }
            set {
                if ((this.AllowEntryInThePastField.Equals(value) != true)) {
                    this.AllowEntryInThePastField = value;
                    this.RaisePropertyChanged("AllowEntryInThePast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllowEntryInThePastType {
            get {
                return this.AllowEntryInThePastTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AllowEntryInThePastTypeField, value) != true)) {
                    this.AllowEntryInThePastTypeField = value;
                    this.RaisePropertyChanged("AllowEntryInThePastType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BankedOverTime {
            get {
                return this.BankedOverTimeField;
            }
            set {
                if ((this.BankedOverTimeField.Equals(value) != true)) {
                    this.BankedOverTimeField = value;
                    this.RaisePropertyChanged("BankedOverTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanManagerModifyBillable {
            get {
                return this.CanManagerModifyBillableField;
            }
            set {
                if ((this.CanManagerModifyBillableField.Equals(value) != true)) {
                    this.CanManagerModifyBillableField = value;
                    this.RaisePropertyChanged("CanManagerModifyBillable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanManagerModifyPayable {
            get {
                return this.CanManagerModifyPayableField;
            }
            set {
                if ((this.CanManagerModifyPayableField.Equals(value) != true)) {
                    this.CanManagerModifyPayableField = value;
                    this.RaisePropertyChanged("CanManagerModifyPayable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultClientUid {
            get {
                return this.DefaultClientUidField;
            }
            set {
                if ((this.DefaultClientUidField.Equals(value) != true)) {
                    this.DefaultClientUidField = value;
                    this.RaisePropertyChanged("DefaultClientUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultProjectUid {
            get {
                return this.DefaultProjectUidField;
            }
            set {
                if ((this.DefaultProjectUidField.Equals(value) != true)) {
                    this.DefaultProjectUidField = value;
                    this.RaisePropertyChanged("DefaultProjectUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultWorkTypeUid {
            get {
                return this.DefaultWorkTypeUidField;
            }
            set {
                if ((this.DefaultWorkTypeUidField.Equals(value) != true)) {
                    this.DefaultWorkTypeUidField = value;
                    this.RaisePropertyChanged("DefaultWorkTypeUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeType {
            get {
                return this.EmployeeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeTypeField, value) != true)) {
                    this.EmployeeTypeField = value;
                    this.RaisePropertyChanged("EmployeeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FunctionalGroupUid {
            get {
                return this.FunctionalGroupUidField;
            }
            set {
                if ((this.FunctionalGroupUidField.Equals(value) != true)) {
                    this.FunctionalGroupUidField = value;
                    this.RaisePropertyChanged("FunctionalGroupUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FunctionalManagerUid {
            get {
                return this.FunctionalManagerUidField;
            }
            set {
                if ((this.FunctionalManagerUidField.Equals(value) != true)) {
                    this.FunctionalManagerUidField = value;
                    this.RaisePropertyChanged("FunctionalManagerUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAssignments {
            get {
                return this.HasAssignmentsField;
            }
            set {
                if ((this.HasAssignmentsField.Equals(value) != true)) {
                    this.HasAssignmentsField = value;
                    this.RaisePropertyChanged("HasAssignments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasErrors {
            get {
                return this.HasErrorsField;
            }
            set {
                if ((this.HasErrorsField.Equals(value) != true)) {
                    this.HasErrorsField = value;
                    this.RaisePropertyChanged("HasErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool HasNotes {
            get {
                return this.HasNotesField;
            }
            set {
                if ((this.HasNotesField.Equals(value) != true)) {
                    this.HasNotesField = value;
                    this.RaisePropertyChanged("HasNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasTimeentries {
            get {
                return this.HasTimeentriesField;
            }
            set {
                if ((this.HasTimeentriesField.Equals(value) != true)) {
                    this.HasTimeentriesField = value;
                    this.RaisePropertyChanged("HasTimeentries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HireDate {
            get {
                return this.HireDateField;
            }
            set {
                if ((object.ReferenceEquals(this.HireDateField, value) != true)) {
                    this.HireDateField = value;
                    this.RaisePropertyChanged("HireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTimesheetClosed {
            get {
                return this.IsTimesheetClosedField;
            }
            set {
                if ((this.IsTimesheetClosedField.Equals(value) != true)) {
                    this.IsTimesheetClosedField = value;
                    this.RaisePropertyChanged("IsTimesheetClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.TaskLeaveTime[] LeaveTimes {
            get {
                return this.LeaveTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.LeaveTimesField, value) != true)) {
                    this.LeaveTimesField = value;
                    this.RaisePropertyChanged("LeaveTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.TimesheetLockedDates[] LockedDates {
            get {
                return this.LockedDatesField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedDatesField, value) != true)) {
                    this.LockedDatesField = value;
                    this.RaisePropertyChanged("LockedDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterSiteUid {
            get {
                return this.MasterSiteUidField;
            }
            set {
                if ((this.MasterSiteUidField.Equals(value) != true)) {
                    this.MasterSiteUidField = value;
                    this.RaisePropertyChanged("MasterSiteUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PeriodClosed {
            get {
                return this.PeriodClosedField;
            }
            set {
                if ((this.PeriodClosedField.Equals(value) != true)) {
                    this.PeriodClosedField = value;
                    this.RaisePropertyChanged("PeriodClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonalDayTime {
            get {
                return this.PersonalDayTimeField;
            }
            set {
                if ((this.PersonalDayTimeField.Equals(value) != true)) {
                    this.PersonalDayTimeField = value;
                    this.RaisePropertyChanged("PersonalDayTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResourceType {
            get {
                return this.ResourceTypeField;
            }
            set {
                if ((this.ResourceTypeField.Equals(value) != true)) {
                    this.ResourceTypeField = value;
                    this.RaisePropertyChanged("ResourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleObjectType {
            get {
                return this.RoleObjectTypeField;
            }
            set {
                if ((this.RoleObjectTypeField.Equals(value) != true)) {
                    this.RoleObjectTypeField = value;
                    this.RaisePropertyChanged("RoleObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowAdjustmentsSection {
            get {
                return this.ShowAdjustmentsSectionField;
            }
            set {
                if ((this.ShowAdjustmentsSectionField.Equals(value) != true)) {
                    this.ShowAdjustmentsSectionField = value;
                    this.RaisePropertyChanged("ShowAdjustmentsSection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowAssignmentsSection {
            get {
                return this.ShowAssignmentsSectionField;
            }
            set {
                if ((this.ShowAssignmentsSectionField.Equals(value) != true)) {
                    this.ShowAssignmentsSectionField = value;
                    this.RaisePropertyChanged("ShowAssignmentsSection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowLeaveTimeSection {
            get {
                return this.ShowLeaveTimeSectionField;
            }
            set {
                if ((this.ShowLeaveTimeSectionField.Equals(value) != true)) {
                    this.ShowLeaveTimeSectionField = value;
                    this.RaisePropertyChanged("ShowLeaveTimeSection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowNonWorkingTimeSection {
            get {
                return this.ShowNonWorkingTimeSectionField;
            }
            set {
                if ((this.ShowNonWorkingTimeSectionField.Equals(value) != true)) {
                    this.ShowNonWorkingTimeSectionField = value;
                    this.RaisePropertyChanged("ShowNonWorkingTimeSection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SickLeaveTime {
            get {
                return this.SickLeaveTimeField;
            }
            set {
                if ((this.SickLeaveTimeField.Equals(value) != true)) {
                    this.SickLeaveTimeField = value;
                    this.RaisePropertyChanged("SickLeaveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateName {
            get {
                return this.TemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateNameField, value) != true)) {
                    this.TemplateNameField = value;
                    this.RaisePropertyChanged("TemplateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateUid {
            get {
                return this.TemplateUidField;
            }
            set {
                if ((this.TemplateUidField.Equals(value) != true)) {
                    this.TemplateUidField = value;
                    this.RaisePropertyChanged("TemplateUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminatedDate {
            get {
                return this.TerminatedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminatedDateField, value) != true)) {
                    this.TerminatedDateField = value;
                    this.RaisePropertyChanged("TerminatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeIncrement {
            get {
                return this.TimeIncrementField;
            }
            set {
                if ((this.TimeIncrementField.Equals(value) != true)) {
                    this.TimeIncrementField = value;
                    this.RaisePropertyChanged("TimeIncrement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Tracman.Tenrox.Integration.TimesheetsService.AssignmentAttribute[] TimesheetAssignmentAttributes {
            get {
                return this.TimesheetAssignmentAttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.TimesheetAssignmentAttributesField, value) != true)) {
                    this.TimesheetAssignmentAttributesField = value;
                    this.RaisePropertyChanged("TimesheetAssignmentAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimesheetColumns {
            get {
                return this.TimesheetColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.TimesheetColumnsField, value) != true)) {
                    this.TimesheetColumnsField = value;
                    this.RaisePropertyChanged("TimesheetColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Tracman.Tenrox.Integration.TimesheetsService.TimesheetEntry[] TimesheetEntries {
            get {
                return this.TimesheetEntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.TimesheetEntriesField, value) != true)) {
                    this.TimesheetEntriesField = value;
                    this.RaisePropertyChanged("TimesheetEntries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.TimesheetError[] TimesheetErrors {
            get {
                return this.TimesheetErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.TimesheetErrorsField, value) != true)) {
                    this.TimesheetErrorsField = value;
                    this.RaisePropertyChanged("TimesheetErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.TimesheetNote[] TimesheetNotes {
            get {
                return this.TimesheetNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.TimesheetNotesField, value) != true)) {
                    this.TimesheetNotesField = value;
                    this.RaisePropertyChanged("TimesheetNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.TimesheetState[] TimesheetStates {
            get {
                return this.TimesheetStatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TimesheetStatesField, value) != true)) {
                    this.TimesheetStatesField = value;
                    this.RaisePropertyChanged("TimesheetStates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.TimesheetTransition[] TimesheetTransitions {
            get {
                return this.TimesheetTransitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TimesheetTransitionsField, value) != true)) {
                    this.TimesheetTransitionsField = value;
                    this.RaisePropertyChanged("TimesheetTransitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPeriodOverTime {
            get {
                return this.TotalPeriodOverTimeField;
            }
            set {
                if ((this.TotalPeriodOverTimeField.Equals(value) != true)) {
                    this.TotalPeriodOverTimeField = value;
                    this.RaisePropertyChanged("TotalPeriodOverTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPeriodPayableTime {
            get {
                return this.TotalPeriodPayableTimeField;
            }
            set {
                if ((this.TotalPeriodPayableTimeField.Equals(value) != true)) {
                    this.TotalPeriodPayableTimeField = value;
                    this.RaisePropertyChanged("TotalPeriodPayableTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPeriodRegTime {
            get {
                return this.TotalPeriodRegTimeField;
            }
            set {
                if ((this.TotalPeriodRegTimeField.Equals(value) != true)) {
                    this.TotalPeriodRegTimeField = value;
                    this.RaisePropertyChanged("TotalPeriodRegTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserAccessStatus {
            get {
                return this.UserAccessStatusField;
            }
            set {
                if ((this.UserAccessStatusField.Equals(value) != true)) {
                    this.UserAccessStatusField = value;
                    this.RaisePropertyChanged("UserAccessStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFirstName {
            get {
                return this.UserFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFirstNameField, value) != true)) {
                    this.UserFirstNameField = value;
                    this.RaisePropertyChanged("UserFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLastName {
            get {
                return this.UserLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLastNameField, value) != true)) {
                    this.UserLastNameField = value;
                    this.RaisePropertyChanged("UserLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserUID {
            get {
                return this.UserUIDField;
            }
            set {
                if ((this.UserUIDField.Equals(value) != true)) {
                    this.UserUIDField = value;
                    this.RaisePropertyChanged("UserUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsersAccessStatus {
            get {
                return this.UsersAccessStatusField;
            }
            set {
                if ((this.UsersAccessStatusField.Equals(value) != true)) {
                    this.UsersAccessStatusField = value;
                    this.RaisePropertyChanged("UsersAccessStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VacationTime {
            get {
                return this.VacationTimeField;
            }
            set {
                if ((this.VacationTimeField.Equals(value) != true)) {
                    this.VacationTimeField = value;
                    this.RaisePropertyChanged("VacationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowGUID {
            get {
                return this.WorkflowGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowGUIDField, value) != true)) {
                    this.WorkflowGUIDField = value;
                    this.RaisePropertyChanged("WorkflowGUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimesheetTransition", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TimesheetTransition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityAssUniqueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFinalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMultiPMappField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRejectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniqueIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityAssUniqueID {
            get {
                return this.ActivityAssUniqueIDField;
            }
            set {
                if ((this.ActivityAssUniqueIDField.Equals(value) != true)) {
                    this.ActivityAssUniqueIDField = value;
                    this.RaisePropertyChanged("ActivityAssUniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproval {
            get {
                return this.IsApprovalField;
            }
            set {
                if ((this.IsApprovalField.Equals(value) != true)) {
                    this.IsApprovalField = value;
                    this.RaisePropertyChanged("IsApproval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinal {
            get {
                return this.IsFinalField;
            }
            set {
                if ((this.IsFinalField.Equals(value) != true)) {
                    this.IsFinalField = value;
                    this.RaisePropertyChanged("IsFinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitial {
            get {
                return this.IsInitialField;
            }
            set {
                if ((this.IsInitialField.Equals(value) != true)) {
                    this.IsInitialField = value;
                    this.RaisePropertyChanged("IsInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMultiPMapp {
            get {
                return this.IsMultiPMappField;
            }
            set {
                if ((this.IsMultiPMappField.Equals(value) != true)) {
                    this.IsMultiPMappField = value;
                    this.RaisePropertyChanged("IsMultiPMapp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRejected {
            get {
                return this.IsRejectedField;
            }
            set {
                if ((this.IsRejectedField.Equals(value) != true)) {
                    this.IsRejectedField = value;
                    this.RaisePropertyChanged("IsRejected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidWork {
            get {
                return this.IsValidWorkField;
            }
            set {
                if ((this.IsValidWorkField.Equals(value) != true)) {
                    this.IsValidWorkField = value;
                    this.RaisePropertyChanged("IsValidWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((this.UniqueIDField.Equals(value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskLeaveTime", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TaskLeaveTime : Tracman.Tenrox.Integration.TimesheetsService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkTypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkTypeId {
            get {
                return this.WorkTypeIdField;
            }
            set {
                if ((this.WorkTypeIdField.Equals(value) != true)) {
                    this.WorkTypeIdField = value;
                    this.RaisePropertyChanged("WorkTypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimesheetLockedDates", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TimesheetLockedDates : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDateLockedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLocked {
            get {
                return this.DateLockedField;
            }
            set {
                if ((this.DateLockedField.Equals(value) != true)) {
                    this.DateLockedField = value;
                    this.RaisePropertyChanged("DateLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDateLocked {
            get {
                return this.IsDateLockedField;
            }
            set {
                if ((this.IsDateLockedField.Equals(value) != true)) {
                    this.IsDateLockedField = value;
                    this.RaisePropertyChanged("IsDateLocked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssignmentAttribute", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class AssignmentAttribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignmentCompField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignmentUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessUnitNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BusinessUnitUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ComponentUidField;
        
        private System.Nullable<int> DirtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ETCField;
        
        private System.Nullable<int> ETCChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasTimeEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsBillableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCustomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsETCEditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsFundedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNonWorkingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPayableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsRandDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManagerUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhaseUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PortfolioUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowETCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SiteUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TeamUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TitleUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniqueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserGroupUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkTypeUidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessType {
            get {
                return this.AccessTypeField;
            }
            set {
                if ((this.AccessTypeField.Equals(value) != true)) {
                    this.AccessTypeField = value;
                    this.RaisePropertyChanged("AccessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentComp {
            get {
                return this.AssignmentCompField;
            }
            set {
                if ((this.AssignmentCompField.Equals(value) != true)) {
                    this.AssignmentCompField = value;
                    this.RaisePropertyChanged("AssignmentComp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignmentName {
            get {
                return this.AssignmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentNameField, value) != true)) {
                    this.AssignmentNameField = value;
                    this.RaisePropertyChanged("AssignmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentUid {
            get {
                return this.AssignmentUidField;
            }
            set {
                if ((this.AssignmentUidField.Equals(value) != true)) {
                    this.AssignmentUidField = value;
                    this.RaisePropertyChanged("AssignmentUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessUnitName {
            get {
                return this.BusinessUnitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessUnitNameField, value) != true)) {
                    this.BusinessUnitNameField = value;
                    this.RaisePropertyChanged("BusinessUnitName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BusinessUnitUid {
            get {
                return this.BusinessUnitUidField;
            }
            set {
                if ((this.BusinessUnitUidField.Equals(value) != true)) {
                    this.BusinessUnitUidField = value;
                    this.RaisePropertyChanged("BusinessUnitUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeName {
            get {
                return this.ChargeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeNameField, value) != true)) {
                    this.ChargeNameField = value;
                    this.RaisePropertyChanged("ChargeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeUid {
            get {
                return this.ChargeUidField;
            }
            set {
                if ((this.ChargeUidField.Equals(value) != true)) {
                    this.ChargeUidField = value;
                    this.RaisePropertyChanged("ChargeUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientUid {
            get {
                return this.ClientUidField;
            }
            set {
                if ((this.ClientUidField.Equals(value) != true)) {
                    this.ClientUidField = value;
                    this.RaisePropertyChanged("ClientUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentName {
            get {
                return this.ComponentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentNameField, value) != true)) {
                    this.ComponentNameField = value;
                    this.RaisePropertyChanged("ComponentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ComponentUid {
            get {
                return this.ComponentUidField;
            }
            set {
                if ((this.ComponentUidField.Equals(value) != true)) {
                    this.ComponentUidField = value;
                    this.RaisePropertyChanged("ComponentUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> Dirty {
            get {
                return this.DirtyField;
            }
            set {
                if ((this.DirtyField.Equals(value) != true)) {
                    this.DirtyField = value;
                    this.RaisePropertyChanged("Dirty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ETC {
            get {
                return this.ETCField;
            }
            set {
                if ((this.ETCField.Equals(value) != true)) {
                    this.ETCField = value;
                    this.RaisePropertyChanged("ETC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ETCChanged {
            get {
                return this.ETCChangedField;
            }
            set {
                if ((this.ETCChangedField.Equals(value) != true)) {
                    this.ETCChangedField = value;
                    this.RaisePropertyChanged("ETCChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasTimeEntry {
            get {
                return this.HasTimeEntryField;
            }
            set {
                if ((this.HasTimeEntryField.Equals(value) != true)) {
                    this.HasTimeEntryField = value;
                    this.RaisePropertyChanged("HasTimeEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsBillable {
            get {
                return this.IsBillableField;
            }
            set {
                if ((this.IsBillableField.Equals(value) != true)) {
                    this.IsBillableField = value;
                    this.RaisePropertyChanged("IsBillable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsCustom {
            get {
                return this.IsCustomField;
            }
            set {
                if ((this.IsCustomField.Equals(value) != true)) {
                    this.IsCustomField = value;
                    this.RaisePropertyChanged("IsCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsETCEditable {
            get {
                return this.IsETCEditableField;
            }
            set {
                if ((this.IsETCEditableField.Equals(value) != true)) {
                    this.IsETCEditableField = value;
                    this.RaisePropertyChanged("IsETCEditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsFunded {
            get {
                return this.IsFundedField;
            }
            set {
                if ((this.IsFundedField.Equals(value) != true)) {
                    this.IsFundedField = value;
                    this.RaisePropertyChanged("IsFunded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNonWorkingTime {
            get {
                return this.IsNonWorkingTimeField;
            }
            set {
                if ((this.IsNonWorkingTimeField.Equals(value) != true)) {
                    this.IsNonWorkingTimeField = value;
                    this.RaisePropertyChanged("IsNonWorkingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPayable {
            get {
                return this.IsPayableField;
            }
            set {
                if ((this.IsPayableField.Equals(value) != true)) {
                    this.IsPayableField = value;
                    this.RaisePropertyChanged("IsPayable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsRandD {
            get {
                return this.IsRandDField;
            }
            set {
                if ((this.IsRandDField.Equals(value) != true)) {
                    this.IsRandDField = value;
                    this.RaisePropertyChanged("IsRandD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManagerUid {
            get {
                return this.ManagerUidField;
            }
            set {
                if ((this.ManagerUidField.Equals(value) != true)) {
                    this.ManagerUidField = value;
                    this.RaisePropertyChanged("ManagerUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PercentComplete {
            get {
                return this.PercentCompleteField;
            }
            set {
                if ((this.PercentCompleteField.Equals(value) != true)) {
                    this.PercentCompleteField = value;
                    this.RaisePropertyChanged("PercentComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhaseName {
            get {
                return this.PhaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhaseNameField, value) != true)) {
                    this.PhaseNameField = value;
                    this.RaisePropertyChanged("PhaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhaseUid {
            get {
                return this.PhaseUidField;
            }
            set {
                if ((this.PhaseUidField.Equals(value) != true)) {
                    this.PhaseUidField = value;
                    this.RaisePropertyChanged("PhaseUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioName {
            get {
                return this.PortfolioNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioNameField, value) != true)) {
                    this.PortfolioNameField = value;
                    this.RaisePropertyChanged("PortfolioName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PortfolioUid {
            get {
                return this.PortfolioUidField;
            }
            set {
                if ((this.PortfolioUidField.Equals(value) != true)) {
                    this.PortfolioUidField = value;
                    this.RaisePropertyChanged("PortfolioUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductUid {
            get {
                return this.ProductUidField;
            }
            set {
                if ((this.ProductUidField.Equals(value) != true)) {
                    this.ProductUidField = value;
                    this.RaisePropertyChanged("ProductUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectUid {
            get {
                return this.ProjectUidField;
            }
            set {
                if ((this.ProjectUidField.Equals(value) != true)) {
                    this.ProjectUidField = value;
                    this.RaisePropertyChanged("ProjectUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowETC {
            get {
                return this.ShowETCField;
            }
            set {
                if ((this.ShowETCField.Equals(value) != true)) {
                    this.ShowETCField = value;
                    this.RaisePropertyChanged("ShowETC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SiteUid {
            get {
                return this.SiteUidField;
            }
            set {
                if ((this.SiteUidField.Equals(value) != true)) {
                    this.SiteUidField = value;
                    this.RaisePropertyChanged("SiteUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskUid {
            get {
                return this.TaskUidField;
            }
            set {
                if ((this.TaskUidField.Equals(value) != true)) {
                    this.TaskUidField = value;
                    this.RaisePropertyChanged("TaskUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TeamUid {
            get {
                return this.TeamUidField;
            }
            set {
                if ((this.TeamUidField.Equals(value) != true)) {
                    this.TeamUidField = value;
                    this.RaisePropertyChanged("TeamUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateUid {
            get {
                return this.TemplateUidField;
            }
            set {
                if ((this.TemplateUidField.Equals(value) != true)) {
                    this.TemplateUidField = value;
                    this.RaisePropertyChanged("TemplateUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleName {
            get {
                return this.TitleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleNameField, value) != true)) {
                    this.TitleNameField = value;
                    this.RaisePropertyChanged("TitleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TitleUid {
            get {
                return this.TitleUidField;
            }
            set {
                if ((this.TitleUidField.Equals(value) != true)) {
                    this.TitleUidField = value;
                    this.RaisePropertyChanged("TitleUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((this.UniqueIDField.Equals(value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserGroupName {
            get {
                return this.UserGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserGroupNameField, value) != true)) {
                    this.UserGroupNameField = value;
                    this.RaisePropertyChanged("UserGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserGroupUid {
            get {
                return this.UserGroupUidField;
            }
            set {
                if ((this.UserGroupUidField.Equals(value) != true)) {
                    this.UserGroupUidField = value;
                    this.RaisePropertyChanged("UserGroupUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserUid {
            get {
                return this.UserUidField;
            }
            set {
                if ((this.UserUidField.Equals(value) != true)) {
                    this.UserUidField = value;
                    this.RaisePropertyChanged("UserUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkTypeName {
            get {
                return this.WorkTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTypeNameField, value) != true)) {
                    this.WorkTypeNameField = value;
                    this.RaisePropertyChanged("WorkTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkTypeUid {
            get {
                return this.WorkTypeUidField;
            }
            set {
                if ((this.WorkTypeUidField.Equals(value) != true)) {
                    this.WorkTypeUidField = value;
                    this.RaisePropertyChanged("WorkTypeUid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimesheetEntry", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TimesheetEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool ApprovedField;
        
        private int AssignmentAttributeUidField;
        
        private int AssignmentUidField;
        
        private int BUnitUidField;
        
        private bool BilledField;
        
        private int ChargeUidField;
        
        private int CreatedByUidField;
        
        private string CreationDateField;
        
        private int DoubleOvertimeField;
        
        private string EntryDateField;
        
        private int EntryStateField;
        
        private bool HasNotesField;
        
        private bool IsBillableField;
        
        private bool IsCustomField;
        
        private bool IsDirtyField;
        
        private bool IsFundedField;
        
        private bool IsNonWorkingField;
        
        private bool IsPayableField;
        
        private bool IsRandDField;
        
        private int OvertimeField;
        
        private int PhaseUidField;
        
        private bool PostedField;
        
        private int RegularTimeField;
        
        private bool RejectedField;
        
        private string SiteNameField;
        
        private int SiteUidField;
        
        private int TaskUidField;
        
        private Tracman.Tenrox.Integration.TimesheetsService.TimesheetNote[] TimeEntryNotesField;
        
        private int TimesheetUidField;
        
        private int TotalTimeField;
        
        private int UniqueIDField;
        
        private string UpdateDateField;
        
        private int UpdatedByUidField;
        
        private int UserUidField;
        
        private bool hasErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int AssignmentAttributeUid {
            get {
                return this.AssignmentAttributeUidField;
            }
            set {
                if ((this.AssignmentAttributeUidField.Equals(value) != true)) {
                    this.AssignmentAttributeUidField = value;
                    this.RaisePropertyChanged("AssignmentAttributeUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int AssignmentUid {
            get {
                return this.AssignmentUidField;
            }
            set {
                if ((this.AssignmentUidField.Equals(value) != true)) {
                    this.AssignmentUidField = value;
                    this.RaisePropertyChanged("AssignmentUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BUnitUid {
            get {
                return this.BUnitUidField;
            }
            set {
                if ((this.BUnitUidField.Equals(value) != true)) {
                    this.BUnitUidField = value;
                    this.RaisePropertyChanged("BUnitUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Billed {
            get {
                return this.BilledField;
            }
            set {
                if ((this.BilledField.Equals(value) != true)) {
                    this.BilledField = value;
                    this.RaisePropertyChanged("Billed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ChargeUid {
            get {
                return this.ChargeUidField;
            }
            set {
                if ((this.ChargeUidField.Equals(value) != true)) {
                    this.ChargeUidField = value;
                    this.RaisePropertyChanged("ChargeUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CreatedByUid {
            get {
                return this.CreatedByUidField;
            }
            set {
                if ((this.CreatedByUidField.Equals(value) != true)) {
                    this.CreatedByUidField = value;
                    this.RaisePropertyChanged("CreatedByUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CreationDateField, value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int DoubleOvertime {
            get {
                return this.DoubleOvertimeField;
            }
            set {
                if ((this.DoubleOvertimeField.Equals(value) != true)) {
                    this.DoubleOvertimeField = value;
                    this.RaisePropertyChanged("DoubleOvertime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryDateField, value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int EntryState {
            get {
                return this.EntryStateField;
            }
            set {
                if ((this.EntryStateField.Equals(value) != true)) {
                    this.EntryStateField = value;
                    this.RaisePropertyChanged("EntryState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool HasNotes {
            get {
                return this.HasNotesField;
            }
            set {
                if ((this.HasNotesField.Equals(value) != true)) {
                    this.HasNotesField = value;
                    this.RaisePropertyChanged("HasNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsBillable {
            get {
                return this.IsBillableField;
            }
            set {
                if ((this.IsBillableField.Equals(value) != true)) {
                    this.IsBillableField = value;
                    this.RaisePropertyChanged("IsBillable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsCustom {
            get {
                return this.IsCustomField;
            }
            set {
                if ((this.IsCustomField.Equals(value) != true)) {
                    this.IsCustomField = value;
                    this.RaisePropertyChanged("IsCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsDirty {
            get {
                return this.IsDirtyField;
            }
            set {
                if ((this.IsDirtyField.Equals(value) != true)) {
                    this.IsDirtyField = value;
                    this.RaisePropertyChanged("IsDirty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsFunded {
            get {
                return this.IsFundedField;
            }
            set {
                if ((this.IsFundedField.Equals(value) != true)) {
                    this.IsFundedField = value;
                    this.RaisePropertyChanged("IsFunded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsNonWorking {
            get {
                return this.IsNonWorkingField;
            }
            set {
                if ((this.IsNonWorkingField.Equals(value) != true)) {
                    this.IsNonWorkingField = value;
                    this.RaisePropertyChanged("IsNonWorking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsPayable {
            get {
                return this.IsPayableField;
            }
            set {
                if ((this.IsPayableField.Equals(value) != true)) {
                    this.IsPayableField = value;
                    this.RaisePropertyChanged("IsPayable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsRandD {
            get {
                return this.IsRandDField;
            }
            set {
                if ((this.IsRandDField.Equals(value) != true)) {
                    this.IsRandDField = value;
                    this.RaisePropertyChanged("IsRandD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Overtime {
            get {
                return this.OvertimeField;
            }
            set {
                if ((this.OvertimeField.Equals(value) != true)) {
                    this.OvertimeField = value;
                    this.RaisePropertyChanged("Overtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PhaseUid {
            get {
                return this.PhaseUidField;
            }
            set {
                if ((this.PhaseUidField.Equals(value) != true)) {
                    this.PhaseUidField = value;
                    this.RaisePropertyChanged("PhaseUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Posted {
            get {
                return this.PostedField;
            }
            set {
                if ((this.PostedField.Equals(value) != true)) {
                    this.PostedField = value;
                    this.RaisePropertyChanged("Posted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RegularTime {
            get {
                return this.RegularTimeField;
            }
            set {
                if ((this.RegularTimeField.Equals(value) != true)) {
                    this.RegularTimeField = value;
                    this.RaisePropertyChanged("RegularTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Rejected {
            get {
                return this.RejectedField;
            }
            set {
                if ((this.RejectedField.Equals(value) != true)) {
                    this.RejectedField = value;
                    this.RaisePropertyChanged("Rejected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int SiteUid {
            get {
                return this.SiteUidField;
            }
            set {
                if ((this.SiteUidField.Equals(value) != true)) {
                    this.SiteUidField = value;
                    this.RaisePropertyChanged("SiteUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TaskUid {
            get {
                return this.TaskUidField;
            }
            set {
                if ((this.TaskUidField.Equals(value) != true)) {
                    this.TaskUidField = value;
                    this.RaisePropertyChanged("TaskUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Tracman.Tenrox.Integration.TimesheetsService.TimesheetNote[] TimeEntryNotes {
            get {
                return this.TimeEntryNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeEntryNotesField, value) != true)) {
                    this.TimeEntryNotesField = value;
                    this.RaisePropertyChanged("TimeEntryNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TimesheetUid {
            get {
                return this.TimesheetUidField;
            }
            set {
                if ((this.TimesheetUidField.Equals(value) != true)) {
                    this.TimesheetUidField = value;
                    this.RaisePropertyChanged("TimesheetUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TotalTime {
            get {
                return this.TotalTimeField;
            }
            set {
                if ((this.TotalTimeField.Equals(value) != true)) {
                    this.TotalTimeField = value;
                    this.RaisePropertyChanged("TotalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((this.UniqueIDField.Equals(value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateDateField, value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UpdatedByUid {
            get {
                return this.UpdatedByUidField;
            }
            set {
                if ((this.UpdatedByUidField.Equals(value) != true)) {
                    this.UpdatedByUidField = value;
                    this.RaisePropertyChanged("UpdatedByUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UserUid {
            get {
                return this.UserUidField;
            }
            set {
                if ((this.UserUidField.Equals(value) != true)) {
                    this.UserUidField = value;
                    this.RaisePropertyChanged("UserUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool hasError {
            get {
                return this.hasErrorField;
            }
            set {
                if ((this.hasErrorField.Equals(value) != true)) {
                    this.hasErrorField = value;
                    this.RaisePropertyChanged("hasError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimesheetError", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TimesheetError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.TimesheetEntry FailedItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.TimesheetEntry FailedItem {
            get {
                return this.FailedItemField;
            }
            set {
                if ((object.ReferenceEquals(this.FailedItemField, value) != true)) {
                    this.FailedItemField = value;
                    this.RaisePropertyChanged("FailedItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimesheetNote", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TimesheetNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniqueIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteType {
            get {
                return this.NoteTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteTypeField, value) != true)) {
                    this.NoteTypeField = value;
                    this.RaisePropertyChanged("NoteType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((this.UniqueIDField.Equals(value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimesheetState", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TimesheetState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFinalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRejectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityGUID {
            get {
                return this.ActivityGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityGUIDField, value) != true)) {
                    this.ActivityGUIDField = value;
                    this.RaisePropertyChanged("ActivityGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproval {
            get {
                return this.IsApprovalField;
            }
            set {
                if ((this.IsApprovalField.Equals(value) != true)) {
                    this.IsApprovalField = value;
                    this.RaisePropertyChanged("IsApproval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCompleted {
            get {
                return this.IsCompletedField;
            }
            set {
                if ((this.IsCompletedField.Equals(value) != true)) {
                    this.IsCompletedField = value;
                    this.RaisePropertyChanged("IsCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinal {
            get {
                return this.IsFinalField;
            }
            set {
                if ((this.IsFinalField.Equals(value) != true)) {
                    this.IsFinalField = value;
                    this.RaisePropertyChanged("IsFinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRejected {
            get {
                return this.IsRejectedField;
            }
            set {
                if ((this.IsRejectedField.Equals(value) != true)) {
                    this.IsRejectedField = value;
                    this.RaisePropertyChanged("IsRejected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://Tenrox.Server.Framework.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TaskLeaveTime))]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.ItemDirtyStatus DirtyStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tracman.Tenrox.Integration.TimesheetsService.QueryLevelType QueryLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UniqueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.ItemDirtyStatus DirtyStatus {
            get {
                return this.DirtyStatusField;
            }
            set {
                if ((this.DirtyStatusField.Equals(value) != true)) {
                    this.DirtyStatusField = value;
                    this.RaisePropertyChanged("DirtyStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tracman.Tenrox.Integration.TimesheetsService.QueryLevelType QueryLevel {
            get {
                return this.QueryLevelField;
            }
            set {
                if ((this.QueryLevelField.Equals(value) != true)) {
                    this.QueryLevelField = value;
                    this.RaisePropertyChanged("QueryLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemDirtyStatus", Namespace="http://schemas.datacontract.org/2004/07/Tenrox.Server.Framework.Business.Business" +
        "Core")]
    public enum ItemDirtyStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Clean = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNew = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryLevelType", Namespace="http://schemas.datacontract.org/2004/07/Tenrox.Server.Framework.Business.Business" +
        "Core")]
    public enum QueryLevelType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryEmpty = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryBase = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryCommon = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryExtended = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryKeys = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueryNull = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
    [System.SerializableAttribute()]
    public partial class TenroxFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ErrorIdField;
        
        private string ErrorMessageField;
        
        private System.Guid CorrelationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ErrorId {
            get {
                return this.ErrorIdField;
            }
            set {
                if ((this.ErrorIdField.Equals(value) != true)) {
                    this.ErrorIdField = value;
                    this.RaisePropertyChanged("ErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Tenrox.Server.Framework.Business.ServiceContracts", ConfigurationName="TimesheetsService.ITimesheets")]
    public interface ITimesheets {
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUser", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserResponse" +
            "")]
        string QueryByUser(string p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUser", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserResponse" +
            "")]
        System.Threading.Tasks.Task<string> QueryByUserAsync(string p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserDateRange", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserDateRang" +
            "eResponse")]
        string QueryByUserDateRange(string p_UserToken, int p_iUserId, string p_dtStartDateRange, string p_dtEndDateRange, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserDateRange", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserDateRang" +
            "eResponse")]
        System.Threading.Tasks.Task<string> QueryByUserDateRangeAsync(string p_UserToken, int p_iUserId, string p_dtStartDateRange, string p_dtEndDateRange, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserPeriodRange", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserPeriodRa" +
            "ngeResponse")]
        string QueryByUserPeriodRange(string p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iTimesheetsBefore, int p_iTimesheetsAfter, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserPeriodRange", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserPeriodRa" +
            "ngeResponse")]
        System.Threading.Tasks.Task<string> QueryByUserPeriodRangeAsync(string p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iTimesheetsBefore, int p_iTimesheetsAfter, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserTypedRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserTypedTen" +
            "roxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryByUserTyped(UserToken p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserTypedRes" +
            "ponse")]
        System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryByUserTypedAsync(UserToken p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserDateRangeTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserDateRang" +
            "eTypedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserDateRang" +
            "eTypedTenroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryByUserDateRangeTyped(UserToken p_UserToken, int p_iUserId, string p_dtStartDateRange, string p_dtEndDateRange, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserDateRangeTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserDateRang" +
            "eTypedResponse")]
        System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryByUserDateRangeTypedAsync(UserToken p_UserToken, int p_iUserId, string p_dtStartDateRange, string p_dtEndDateRange, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserPeriodRangeTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserPeriodRa" +
            "ngeTypedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserPeriodRa" +
            "ngeTypedTenroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryByUserPeriodRangeTyped(UserToken p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iTimesheetsBefore, int p_iTimesheetsAfter, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryByUserPeriodRangeTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryByUserPeriodRa" +
            "ngeTypedResponse")]
        System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryByUserPeriodRangeTypedAsync(UserToken p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iTimesheetsBefore, int p_iTimesheetsAfter, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveXML", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveXMLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveXMLTenroxFaultC" +
            "ontractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        string SaveXML(string p_UserToken, int p_intUserUId, string p_timesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveXML", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveXMLResponse")]
        System.Threading.Tasks.Task<string> SaveXMLAsync(string p_UserToken, int p_intUserUId, string p_timesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveXMLAndTransition", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveXMLAndTransitio" +
            "nResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveXMLAndTransitio" +
            "nTenroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        string SaveXMLAndTransition(string p_UserToken, int p_intUserUId, string p_timesheets, int p_intTimesheetToTransition, int p_intToTransition);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveXMLAndTransition", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveXMLAndTransitio" +
            "nResponse")]
        System.Threading.Tasks.Task<string> SaveXMLAndTransitionAsync(string p_UserToken, int p_intUserUId, string p_timesheets, int p_intTimesheetToTransition, int p_intToTransition);
        
        [System.ServiceModel.OperationContractAttribute(Action="Save", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveTenroxFaultCont" +
            "ractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        Tracman.Tenrox.Integration.TimesheetsService.Timesheets Save(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="Save", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveResponse")]
        System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> SaveAsync(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveTimesheets", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveTimesheetsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveTimesheetsTenro" +
            "xFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        string SaveTimesheets(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveTimesheets", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveTimesheetsRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> SaveTimesheetsAsync(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAndTransition", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveAndTransitionRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveAndTransitionTe" +
            "nroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        Tracman.Tenrox.Integration.TimesheetsService.Timesheets SaveAndTransition(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets, int p_intTimesheetToTransition, int p_intToTransition);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAndTransition", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/SaveAndTransitionRe" +
            "sponse")]
        System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> SaveAndTransitionAsync(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets, int p_intTimesheetToTransition, int p_intToTransition);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryCompletedTimesheetsByUserTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryCompletedTimes" +
            "heetsByUserTypedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryCompletedTimes" +
            "heetsByUserTypedTenroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryCompletedTimesheetsByUserTyped(UserToken p_UserToken, string p_dtStartDate, string p_dtEndDate, int p_intLastUniqueId, string p_strAction, string p_strSearchBy, string p_strSearchFor, int p_intMaxTimesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryCompletedTimesheetsByUserTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryCompletedTimes" +
            "heetsByUserTypedResponse")]
        System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryCompletedTimesheetsByUserTypedAsync(UserToken p_UserToken, string p_dtStartDate, string p_dtEndDate, int p_intLastUniqueId, string p_strAction, string p_strSearchBy, string p_strSearchFor, int p_intMaxTimesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryCompletedTimesheetsByUser", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryCompletedTimes" +
            "heetsByUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryCompletedTimes" +
            "heetsByUserTenroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        string QueryCompletedTimesheetsByUser(string p_UserToken, string p_dtStartDate, string p_dtEndDate, int p_intLastUniqueId, string p_strAction, string p_strSearchBy, string p_strSearchFor, int p_intMaxTimesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryCompletedTimesheetsByUser", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryCompletedTimes" +
            "heetsByUserResponse")]
        System.Threading.Tasks.Task<string> QueryCompletedTimesheetsByUserAsync(string p_UserToken, string p_dtStartDate, string p_dtEndDate, int p_intLastUniqueId, string p_strAction, string p_strSearchBy, string p_strSearchFor, int p_intMaxTimesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryTimesheetsDetails", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryTimesheetsDeta" +
            "ilsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryTimesheetsDeta" +
            "ilsTenroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        string QueryTimesheetsDetails(string p_UserToken, int p_intUserUId, string p_dtStartDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryTimesheetsDetails", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryTimesheetsDeta" +
            "ilsResponse")]
        System.Threading.Tasks.Task<string> QueryTimesheetsDetailsAsync(string p_UserToken, int p_intUserUId, string p_dtStartDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryTimesheetsDetailsTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryTimesheetsDeta" +
            "ilsTypedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryTimesheetsDeta" +
            "ilsTypedTenroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryTimesheetsDetailsTyped(UserToken p_UserToken, int p_intUserUId, string p_dtStartDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="QueryTimesheetsDetailsTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/QueryTimesheetsDeta" +
            "ilsTypedResponse")]
        System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryTimesheetsDetailsTypedAsync(UserToken p_UserToken, int p_intUserUId, string p_dtStartDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="ExecuteTransition", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/ExecuteTransitionRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/ExecuteTransitionTe" +
            "nroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        bool ExecuteTransition(string p_UserToken, string p_XmlCompletedTimesheet, string p_strNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="ExecuteTransition", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/ExecuteTransitionRe" +
            "sponse")]
        System.Threading.Tasks.Task<bool> ExecuteTransitionAsync(string p_UserToken, string p_XmlCompletedTimesheet, string p_strNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="ExecuteTransitions", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/ExecuteTransitionsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/ExecuteTransitionsT" +
            "enroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        string ExecuteTransitions(UserToken p_UserToken, string p_XmlCompletedTimesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="ExecuteTransitions", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/ExecuteTransitionsR" +
            "esponse")]
        System.Threading.Tasks.Task<string> ExecuteTransitionsAsync(UserToken p_UserToken, string p_XmlCompletedTimesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="ExecuteTransitionsTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/ExecuteTransitionsT" +
            "ypedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Tracman.Tenrox.Integration.TimesheetsService.TenroxFaultContract), Action="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/ExecuteTransitionsT" +
            "ypedTenroxFaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        Tracman.Tenrox.Integration.TimesheetsService.Timesheets ExecuteTransitionsTyped(UserToken p_UserToken, string p_XmlCompletedTimesheets);
        
        [System.ServiceModel.OperationContractAttribute(Action="ExecuteTransitionsTyped", ReplyAction="Tenrox.Server.Framework.Business.ServiceContracts/ITimesheets/ExecuteTransitionsT" +
            "ypedResponse")]
        System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> ExecuteTransitionsTypedAsync(UserToken p_UserToken, string p_XmlCompletedTimesheets);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITimesheetsChannel : Tracman.Tenrox.Integration.TimesheetsService.ITimesheets, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimesheetsClient : System.ServiceModel.ClientBase<Tracman.Tenrox.Integration.TimesheetsService.ITimesheets>, Tracman.Tenrox.Integration.TimesheetsService.ITimesheets {
        
        public TimesheetsClient() {
        }
        
        public TimesheetsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TimesheetsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimesheetsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimesheetsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string QueryByUser(string p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUser(p_UserToken, p_iUserId, p_dtAnyDate, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public System.Threading.Tasks.Task<string> QueryByUserAsync(string p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserAsync(p_UserToken, p_iUserId, p_dtAnyDate, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public string QueryByUserDateRange(string p_UserToken, int p_iUserId, string p_dtStartDateRange, string p_dtEndDateRange, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserDateRange(p_UserToken, p_iUserId, p_dtStartDateRange, p_dtEndDateRange, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public System.Threading.Tasks.Task<string> QueryByUserDateRangeAsync(string p_UserToken, int p_iUserId, string p_dtStartDateRange, string p_dtEndDateRange, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserDateRangeAsync(p_UserToken, p_iUserId, p_dtStartDateRange, p_dtEndDateRange, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public string QueryByUserPeriodRange(string p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iTimesheetsBefore, int p_iTimesheetsAfter, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserPeriodRange(p_UserToken, p_iUserId, p_dtAnyDate, p_iTimesheetsBefore, p_iTimesheetsAfter, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public System.Threading.Tasks.Task<string> QueryByUserPeriodRangeAsync(string p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iTimesheetsBefore, int p_iTimesheetsAfter, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserPeriodRangeAsync(p_UserToken, p_iUserId, p_dtAnyDate, p_iTimesheetsBefore, p_iTimesheetsAfter, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryByUserTyped(UserToken p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserTyped(p_UserToken, p_iUserId, p_dtAnyDate, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryByUserTypedAsync(UserToken p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserTypedAsync(p_UserToken, p_iUserId, p_dtAnyDate, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryByUserDateRangeTyped(UserToken p_UserToken, int p_iUserId, string p_dtStartDateRange, string p_dtEndDateRange, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserDateRangeTyped(p_UserToken, p_iUserId, p_dtStartDateRange, p_dtEndDateRange, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryByUserDateRangeTypedAsync(UserToken p_UserToken, int p_iUserId, string p_dtStartDateRange, string p_dtEndDateRange, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserDateRangeTypedAsync(p_UserToken, p_iUserId, p_dtStartDateRange, p_dtEndDateRange, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryByUserPeriodRangeTyped(UserToken p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iTimesheetsBefore, int p_iTimesheetsAfter, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserPeriodRangeTyped(p_UserToken, p_iUserId, p_dtAnyDate, p_iTimesheetsBefore, p_iTimesheetsAfter, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryByUserPeriodRangeTypedAsync(UserToken p_UserToken, int p_iUserId, string p_dtAnyDate, int p_iTimesheetsBefore, int p_iTimesheetsAfter, int p_iRoleObjectType, string p_strActivityname, string p_strComingFrom) {
            return base.Channel.QueryByUserPeriodRangeTypedAsync(p_UserToken, p_iUserId, p_dtAnyDate, p_iTimesheetsBefore, p_iTimesheetsAfter, p_iRoleObjectType, p_strActivityname, p_strComingFrom);
        }
        
        public string SaveXML(string p_UserToken, int p_intUserUId, string p_timesheets) {
            return base.Channel.SaveXML(p_UserToken, p_intUserUId, p_timesheets);
        }
        
        public System.Threading.Tasks.Task<string> SaveXMLAsync(string p_UserToken, int p_intUserUId, string p_timesheets) {
            return base.Channel.SaveXMLAsync(p_UserToken, p_intUserUId, p_timesheets);
        }
        
        public string SaveXMLAndTransition(string p_UserToken, int p_intUserUId, string p_timesheets, int p_intTimesheetToTransition, int p_intToTransition) {
            return base.Channel.SaveXMLAndTransition(p_UserToken, p_intUserUId, p_timesheets, p_intTimesheetToTransition, p_intToTransition);
        }
        
        public System.Threading.Tasks.Task<string> SaveXMLAndTransitionAsync(string p_UserToken, int p_intUserUId, string p_timesheets, int p_intTimesheetToTransition, int p_intToTransition) {
            return base.Channel.SaveXMLAndTransitionAsync(p_UserToken, p_intUserUId, p_timesheets, p_intTimesheetToTransition, p_intToTransition);
        }
        
        public Tracman.Tenrox.Integration.TimesheetsService.Timesheets Save(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets) {
            return base.Channel.Save(p_UserToken, p_intUserUId, p_timesheets);
        }
        
        public System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> SaveAsync(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets) {
            return base.Channel.SaveAsync(p_UserToken, p_intUserUId, p_timesheets);
        }
        
        public string SaveTimesheets(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets) {
            return base.Channel.SaveTimesheets(p_UserToken, p_intUserUId, p_timesheets);
        }
        
        public System.Threading.Tasks.Task<string> SaveTimesheetsAsync(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets) {
            return base.Channel.SaveTimesheetsAsync(p_UserToken, p_intUserUId, p_timesheets);
        }
        
        public Tracman.Tenrox.Integration.TimesheetsService.Timesheets SaveAndTransition(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets, int p_intTimesheetToTransition, int p_intToTransition) {
            return base.Channel.SaveAndTransition(p_UserToken, p_intUserUId, p_timesheets, p_intTimesheetToTransition, p_intToTransition);
        }
        
        public System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> SaveAndTransitionAsync(UserToken p_UserToken, int p_intUserUId, Tracman.Tenrox.Integration.TimesheetsService.Timesheets p_timesheets, int p_intTimesheetToTransition, int p_intToTransition) {
            return base.Channel.SaveAndTransitionAsync(p_UserToken, p_intUserUId, p_timesheets, p_intTimesheetToTransition, p_intToTransition);
        }
        
        public Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryCompletedTimesheetsByUserTyped(UserToken p_UserToken, string p_dtStartDate, string p_dtEndDate, int p_intLastUniqueId, string p_strAction, string p_strSearchBy, string p_strSearchFor, int p_intMaxTimesheets) {
            return base.Channel.QueryCompletedTimesheetsByUserTyped(p_UserToken, p_dtStartDate, p_dtEndDate, p_intLastUniqueId, p_strAction, p_strSearchBy, p_strSearchFor, p_intMaxTimesheets);
        }
        
        public System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryCompletedTimesheetsByUserTypedAsync(UserToken p_UserToken, string p_dtStartDate, string p_dtEndDate, int p_intLastUniqueId, string p_strAction, string p_strSearchBy, string p_strSearchFor, int p_intMaxTimesheets) {
            return base.Channel.QueryCompletedTimesheetsByUserTypedAsync(p_UserToken, p_dtStartDate, p_dtEndDate, p_intLastUniqueId, p_strAction, p_strSearchBy, p_strSearchFor, p_intMaxTimesheets);
        }
        
        public string QueryCompletedTimesheetsByUser(string p_UserToken, string p_dtStartDate, string p_dtEndDate, int p_intLastUniqueId, string p_strAction, string p_strSearchBy, string p_strSearchFor, int p_intMaxTimesheets) {
            return base.Channel.QueryCompletedTimesheetsByUser(p_UserToken, p_dtStartDate, p_dtEndDate, p_intLastUniqueId, p_strAction, p_strSearchBy, p_strSearchFor, p_intMaxTimesheets);
        }
        
        public System.Threading.Tasks.Task<string> QueryCompletedTimesheetsByUserAsync(string p_UserToken, string p_dtStartDate, string p_dtEndDate, int p_intLastUniqueId, string p_strAction, string p_strSearchBy, string p_strSearchFor, int p_intMaxTimesheets) {
            return base.Channel.QueryCompletedTimesheetsByUserAsync(p_UserToken, p_dtStartDate, p_dtEndDate, p_intLastUniqueId, p_strAction, p_strSearchBy, p_strSearchFor, p_intMaxTimesheets);
        }
        
        public string QueryTimesheetsDetails(string p_UserToken, int p_intUserUId, string p_dtStartDate) {
            return base.Channel.QueryTimesheetsDetails(p_UserToken, p_intUserUId, p_dtStartDate);
        }
        
        public System.Threading.Tasks.Task<string> QueryTimesheetsDetailsAsync(string p_UserToken, int p_intUserUId, string p_dtStartDate) {
            return base.Channel.QueryTimesheetsDetailsAsync(p_UserToken, p_intUserUId, p_dtStartDate);
        }
        
        public Tracman.Tenrox.Integration.TimesheetsService.Timesheets QueryTimesheetsDetailsTyped(UserToken p_UserToken, int p_intUserUId, string p_dtStartDate) {
            return base.Channel.QueryTimesheetsDetailsTyped(p_UserToken, p_intUserUId, p_dtStartDate);
        }
        
        public System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> QueryTimesheetsDetailsTypedAsync(UserToken p_UserToken, int p_intUserUId, string p_dtStartDate) {
            return base.Channel.QueryTimesheetsDetailsTypedAsync(p_UserToken, p_intUserUId, p_dtStartDate);
        }
        
        public bool ExecuteTransition(string p_UserToken, string p_XmlCompletedTimesheet, string p_strNote) {
            return base.Channel.ExecuteTransition(p_UserToken, p_XmlCompletedTimesheet, p_strNote);
        }
        
        public System.Threading.Tasks.Task<bool> ExecuteTransitionAsync(string p_UserToken, string p_XmlCompletedTimesheet, string p_strNote) {
            return base.Channel.ExecuteTransitionAsync(p_UserToken, p_XmlCompletedTimesheet, p_strNote);
        }
        
        public string ExecuteTransitions(UserToken p_UserToken, string p_XmlCompletedTimesheets) {
            return base.Channel.ExecuteTransitions(p_UserToken, p_XmlCompletedTimesheets);
        }
        
        public System.Threading.Tasks.Task<string> ExecuteTransitionsAsync(UserToken p_UserToken, string p_XmlCompletedTimesheets) {
            return base.Channel.ExecuteTransitionsAsync(p_UserToken, p_XmlCompletedTimesheets);
        }
        
        public Tracman.Tenrox.Integration.TimesheetsService.Timesheets ExecuteTransitionsTyped(UserToken p_UserToken, string p_XmlCompletedTimesheets) {
            return base.Channel.ExecuteTransitionsTyped(p_UserToken, p_XmlCompletedTimesheets);
        }
        
        public System.Threading.Tasks.Task<Tracman.Tenrox.Integration.TimesheetsService.Timesheets> ExecuteTransitionsTypedAsync(UserToken p_UserToken, string p_XmlCompletedTimesheets) {
            return base.Channel.ExecuteTransitionsTypedAsync(p_UserToken, p_XmlCompletedTimesheets);
        }
    }
}
